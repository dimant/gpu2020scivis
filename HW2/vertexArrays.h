#ifndef VERTEXARRAYS_H
#define VERTEXARRAYS_H

float single_triangle[] = {
	 0.0f,	 1.0f,	0.0f, 1.0f, 0.0f, 0.0f,
	 1.0f,	-1.0f,	0.0f, 0.0f, 1.0f, 0.0f,
	-1.0f,	-1.0f,	0.0f, 0.0f, 0.0f, 1.0f
};

float can_cube_verts_cols[] = {
	// vertex position (x,y,z), color (r,g,b)

	//+Z, Red
	-1.0f, -1.0f, 1.0f,    1.0f, 0.0f, 0.0f, // v0
	1.0f, -1.0f, 1.0f,     1.0f, 0.0f, 0.0f, // v1
	1.0f, 1.0f, 1.0f,      1.0f, 0.0f, 0.0f, // v2  (MAX)

	-1.0f, -1.0f, 1.0f,    1.0f, 0.0f, 0.0f, // v0
	1.0f, 1.0f, 1.0f,      1.0f, 0.0f, 0.0f, // v2  (MAX)
	-1.0f, 1.0f, 1.0f,     1.0f, 0.0f, 0.0f, // v3

	//+X, Green
	1.0f, -1.0f, 1.0f,     0.0f, 1.0f, 0.0f, // v1
	1.0f, -1.0f, -1.0f,    0.0f, 1.0f, 0.0f, // v4
	1.0f, 1.0f, -1.0f,     0.0f, 1.0f, 0.0f, // v7

	1.0f, -1.0f, 1.0f,     0.0f, 1.0f, 0.0f, // v1
	1.0f, 1.0f, -1.0f,     0.0f, 1.0f, 0.0f, // v7
	1.0f, 1.0f, 1.0f,      0.0f, 1.0f, 0.0f, // v2  (MAX)

	//+Y, Blue
	-1.0f, 1.0f, 1.0f,     0.0f, 0.0f, 1.0f, // v3
	1.0f, 1.0f, 1.0f,      0.0f, 0.0f, 1.0f, // v2  (MAX)
	1.0f, 1.0f, -1.0f,     0.0f, 0.0f, 1.0f, // v7

	-1.0f, 1.0f, 1.0f,     0.0f, 0.0f, 1.0f, // v3
	1.0f, 1.0f, -1.0f,     0.0f, 0.0f, 1.0f, // v7
	-1.0f, 1.0f, -1.0f,    0.0f, 0.0f, 1.0f, // v6

	//-Z, yellow
	1.0f, -1.0f, -1.0f,    1.0f, 1.0f, 0.0f, // v4
	-1.0f, -1.0f, -1.0f,   1.0f, 1.0f, 0.0f, // v5 (min)
	-1.0f, 1.0f, -1.0f,    1.0f, 1.0f, 0.0f, // v6

	1.0f, -1.0f, -1.0f,    1.0f, 1.0f, 0.0f, // v4
	-1.0f, 1.0f, -1.0f,    1.0f, 1.0f, 0.0f, // v6
	1.0f, 1.0f, -1.0f,     1.0f, 1.0f, 0.0f, // v7

	//-X, Purple
	-1.0f, -1.0f, 1.0f,    1.0f, 0.0f, 1.0f, // v0
	-1.0f, -1.0f, -1.0f,   1.0f, 0.0f, 1.0f, // v5
	-1.0f, 1.0f, -1.0f,    1.0f, 0.0f, 1.0f, // v6

	-1.0f, -1.0f, 1.0f,    1.0f, 0.0f, 1.0f, // v0
	-1.0f, 1.0f, -1.0f,    1.0f, 0.0f, 1.0f, // v6
	-1.0f, 1.0f, 1.0f,     1.0f, 0.0f, 1.0f, // v3

	//-Y, light-blue
	-1.0f, -1.0f, 1.0f,    0.0f, 1.0f, 1.0f, // v0
	1.0f, -1.0f, 1.0f,     0.0f, 1.0f, 1.0f, // v1
	1.0f, -1.0f, -1.0f,    0.0f, 1.0f, 1.0f, // v4

	-1.0f, -1.0f, 1.0f,    0.0f, 1.0f, 1.0f, // v0
	1.0f, -1.0f, -1.0f,    0.0f, 1.0f, 1.0f, // v4
	-1.0f, -1.0f, -1.0f,   0.0f, 1.0f, 1.0f, // v5

};

// https://en.wikipedia.org/wiki/Tetrahedron#Coordinates_for_a_regular_tetrahedron
// (1, 1, 1), (1, −1, −1), (−1, 1, −1), (−1, −1, 1)

float tetrahedron_verts[] =
{
	 0.0f,  0.0f,  0.0f, // v1
	 1.0f,  0.0f,  0.0f, // v2
	 0.0f,  1.0f,  0.0f, // v4

	 1.0f,  0.0f,  0.0f, // v2
	 0.0f,  0.0f, -1.0f, // v3
	 0.0f,  1.0f,  0.0f, // v4

	 0.0f,  0.0f,  0.0f, // v1
	 0.0f,  0.0f, -1.0f, // v3
	 0.0f,  1.0f,  0.0f, // v4

	 0.0f,  0.0f,  0.0f, // v1
	 1.0f,  0.0f,  0.0f, // v2
	 0.0f,  0.0f, -1.0f, // v3

};

float tetrahedron_cols[] =
{
	1.0f, 0.0f, 0.0f,
	1.0f, 0.0f, 0.0f,
	1.0f, 0.0f, 0.0f,

	0.0f, 1.0f, 0.0f,
	0.0f, 1.0f, 0.0f,
	0.0f, 1.0f, 0.0f,

	0.0f, 0.0f, 1.0f,
	0.0f, 0.0f, 1.0f,
	0.0f, 0.0f, 1.0f,

	1.0f, 0.0f, 1.0f,
	1.0f, 0.0f, 1.0f,
	1.0f, 0.0f, 1.0f,

};

float tilted_rect[] = {
	// vertex position (x,y,z), color (r,g,b), texel (x, y)

	-1.0f, -1.0f, 1.0f,    1.0f, 1.0f, 1.0f,    0.0f, 0.0f, // v0
	1.0f, -1.0f, 1.0f,     1.0f, 1.0f, 1.0f,    1.0f, 0.0f, // v1
	1.0f, 1.0f, -1.0f,      1.0f, 1.0f, 1.0f,   1.0f, 1.0f, // v2

	-1.0f, -1.0f, 1.0f,    1.0f, 1.0f, 1.0f,    0.0f, 0.0f, // v0
	1.0f, 1.0f, -1.0f,      1.0f, 1.0f, 1.0f,   1.0f, 1.0f, // v2
	-1.0f, 1.0f, -1.0f,     1.0f, 1.0f, 1.0f,   0.0f, 1.0f, // v3
};

#endif // !VERTEXARRAY_H
